---
title: "February_viz"
author: "Arindam Baruah"
format: html
---

```{r theme}

library(tidyverse)
library(stringr)
library(glue)
library(ggrepel)
library(ggplot2)
library(ggtext)
library(sysfonts)
library(showtext)
library(ggbump)
library(gghighlight)
library(MetBrewer)
library(ggstream)
library(ggforce)
# caption handles
swd <- str_glue("#SWDchallenge: June 2024 &bull; Source: Synthetic data from ChatGPT<br>")  
li <- str_glue("<span style='font-family:fa6-brands'>&#xf08c;</span>")  
gh <- str_glue("<span style='font-family:fa6-brands'>&#xf09b;</span>")
mn <- str_glue("<span style='font-family:fa6-brands'>&#xf4f6;</span>")
tt <- str_glue("#TidyTuesdayR: November 2024 &bull; Source: US Customs and Border Protection (CBP) <br>") 

# plot colors
bkg_col      <- "cornsilk"  
title_col    <- "#3d3d3d"           
subtitle_col <- "#3d3d3d"     
caption_col  <- "#72647D"   
text_col     <- colorspace::darken("gray40" , 0.2)  

# fonts

font_add('fa6-brands','fontawesome/otfs/Font Awesome 6 Brands-Regular-400.otf') 
font_add_google("Squada One", regular.wt = 400, family = "title")                 
font_add_google("Merriweather", regular.wt = 400, family = "subtitle")  
font_add_google("Quattrocento Sans", regular.wt = 400, family = "text")        
font_add_google("Merriweather", regular.wt = 400,family = "caption")
showtext_auto(enable = TRUE)  

# Plot texts

title_text <- "<span style='color:darkred'>The Changing World: <br> Population Growth Across Continents</span>"

subtitle_text <- "As the years have passed, the world’s population landscape has transformed significantly. Asia has solidified its dominance, <br> now  <strong>home to nearly 6 in 10 people worldwide</strong>. Africa has surged ahead, surpassing Europe to become the second most <br> populous continent, reflecting rapid demographic growth. Meanwhile, <strong>Oceania remains the least populated region, <br> contributing just 0.5% of the global population</strong>, appearing as a thin sliver in the visualisation."


X_icon <- glue("<span style='font-family:fa6-brands'>&#xe61b;</span>")

caption_text <- str_glue("{li} Arindam Baruah | {X_icon} @wizsights | {gh} arinbaruah | Source: GitHub | #rstudio #ggstream #ggplot2")

theme_set(theme_minimal(base_size = 15, base_family = "text"))                

# Theme updates

theme_update(
  plot.title.position   = "plot",
  plot.caption.position = "plot",
  legend.position       = 'plot',
  plot.margin           = margin(t = 10, r = 15, b = 0, l = 15),
  plot.background       = element_rect(fill = bkg_col, color = bkg_col),
  panel.background      = element_rect(fill = bkg_col, color = bkg_col),
  axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),
  axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),
  axis.text             = element_text(size = 10, color = text_col, family = 'text',face = "bold"),
  panel.grid.minor.y    = element_blank(),
  panel.grid.major.y    = element_line(linetype = "dotted", linewidth = 0.1, color = 'gray40'),
  panel.grid.minor.x    = element_blank(),
  panel.grid.major.x    = element_blank(),
  axis.line.x           = element_line(color = "#d7d7d8", linewidth = .2),
)

 

```


```{r}
pop_data <- read_csv(url("https://raw.githubusercontent.com/autistic96/project-2/main/world_population.csv"))
```

# Data wrangling


```{r}
pop_data <- pop_data %>% select(-c(Rank,CCA3,Capital,"Area (km²)","Density (per km²)","Growth Rate","World Population Percentage" ))
```

```{r}
pop_data_long <- pop_data %>% pivot_longer(cols = -c("Country/Territory",Continent),names_to = "Year",values_to = "Population")

pop_data_long <- pop_data_long %>% 
 separate(Year, into = c("Year", "population"), sep = " ", extra = "merge", fill = "right")

pop_data_long <- pop_data_long %>% mutate(Year = as.integer(Year)) %>% select(-population)

```

```{r}
pop_data_long_grouped <- pop_data_long %>% 
  group_by(Continent,Year) %>% 
  summarise(Total_population = sum(Population)) 


```

# Data Viz

```{r}

options(scipen = 999)

continent_colors <- c("Africa" = "#E63946",
            "Asia" = "#F4A261" ,
            "Europe" = "#2A9D8F" ,
            "North America" = "#6495ED",
            "Oceania" = "#6E2C00" ,
            "South America" = "#457B9D" )

label_positions <- tibble(
  Continent = c("Africa", "Asia", "Europe", "North America","South America","Oceania"),
  # X positions for vertical alignment
  x_position = c(2000, 1980,1990, 2011,2013,2021),
  # Label positions - extending beyond the streams
  y_position = c(8, 8,-10,8,-10,-10),  
  # Stream connection points - where the lines should touch the streams
  y_start = c(3, 0,-2.45, -3.5,-5.5,-8)    
)

highlight_point <- pop_data_long_grouped[pop_data_long_grouped$Year == 2020 & pop_data_long_grouped$Continent == "Oceania", ]

pl <- ggplot(pop_data_long_grouped, 
       aes(x = Year, 
           y = Total_population/10^9, 
           fill = Continent, 
           group = Continent,
           )) +
  geom_stream(
    type = "mirror",
    bw = 0.82,
    extra_span = 0.2
  ) + 
   geom_segment(
    data = label_positions,
    aes(
      x = x_position,
      y = y_start,
      xend = x_position,
      yend = y_position
    ),
    color = text_col,
    linewidth = 0.8,
    linetype = "solid"
  ) +
  geom_text(
    data = label_positions,
    aes(
      x = x_position,
      y = y_position,
      label = Continent
    ),
    size = 12,
    fontface = "bold",
    color = text_col,
    vjust = ifelse(label_positions$y_position < 0, 1.2, -0.2)  
  ) +
  ylim(-12,12) +
  geom_circle(data = highlight_point, 
              aes(x0 = 2021, y0 = -7.5, r = 0.5),  # Change r to adjust circle size
              color = text_col, size = 1, inherit.aes = FALSE) + 
  scale_fill_manual(values = continent_colors) +
  labs(caption = caption_text,
       title = title_text,
       subtitle = subtitle_text,
       x = "Year",
       y = "Total Population (in billions)") +
  
  theme(legend.position = "none",
        panel.spacing = unit(3, "lines"),
        panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        panel.grid.major.x = element_blank(),
        plot.margin = margin(20, 20, 20, 20),
    legend.title.position = "top",
    legend.title = element_text(
      color = text_col,
      hjust = 0.5,
      family = "text",
      face = "bold",
      size = rel(3.5),
    ),
    legend.text = element_markdown(
      color = text_col,
      family = "text",
      size = rel(2),
      face = "bold"
    ),
    plot.title            = element_markdown(
      size                = rel(6),
      family              = "title",
      face                = "bold",
      color               = title_col,
      lineheight          = 0.2,
      margin              = margin(t = 5, b = 5),
      hjust               = 0.5
    ),        
    plot.subtitle         = element_markdown(
      size                = 28, 
      family              = 'subtitle',
      color               = subtitle_col,
      hjust               = 0,
      lineheight          = 0.35, 
      margin              = margin(t = 5, b = 1)
    ),
      plot.caption          = element_markdown(
      size                = rel(1.5), 
      family              = 'caption',
      color               = caption_col,
      lineheight          = 0.3,
      hjust               = 0.5,
      vjust               = -0.5,
      halign              = 0,
      margin              = margin(t = 10, b = 10)
    ),
    strip.text = element_markdown(
      size                = rel(1.5),
      family              = 'text',
      face                = "bold"   
    ),
    axis.title = element_markdown(
      size                = rel(2),
      family              = "text"
    ),
    axis.text.y  = element_markdown(
      size = rel(3)
    ),
    axis.text.x = element_markdown(
      size = rel(3)
    )
  ) 


pl

ggsave("Population_change.jpeg",plot = pl,width =8, height = 5)
```

```{r}
pop_data_long_grouped <- pop_data_long_grouped %>% filter(Year == max(Year)) %>% group_by(Year) %>% mutate(Current_population = sum(Total_population))
pop_data_long_grouped %>% mutate(Population_proportion = 100*Total_population/Current_population)
```

