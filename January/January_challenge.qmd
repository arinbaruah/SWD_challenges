---
title: "January_challenge"
author: "Arindam Baruah"
format: html
---
# Libraries

```{r, message=FALSE,echo=FALSE}
# Load libraries

# Not all are used for the plot
library(galah)
library(tidyverse)
library(ggplot2)
library(nullabor)
library(leaflet)
library(spatstat) 
library(plotly)
library(tsibble)
library(sf)
library(rmapshaper)
library(lubridate)
library(broom)
library(GGally)
library(forecast)
library(ggalt)
library(rnoaa)
library(UpSetR)
library(stringr)
library(caret)
library(DT)
library(mltools)
library(data.table)
library(grid)
library(gridExtra)
```

# Data reading

```{r}
df <- read_csv("data/goodreads_top100.csv")

```

```{r}
df$Genres <- str_replace_all(df$Genres,"[\\[\\]]","")



split_data <- str_split(df$Genres, ",")

# Convert the result to a matrix
result_matrix <- do.call(rbind, split_data)

# Convert the matrix to a data frame
result_df <- as.data.frame(result_matrix)

# Set column names
colnames(result_df) <- paste0("V", seq_len(ncol(result_df)))

# Print the resulting data frame
print(result_df)


```



```{r}



DF <- as.data.frame(unclass(result_df),stringsAsFactors=TRUE)
df <- cbind(df,DF)

df <- df %>% select(-c(Genres,Description,Series,`Release number`,Author,`Num Pages`,`Publication Date`,Rating,...1))
```

```{r}

col_name <- c("Book","V1","V2","V3","V4","V5","V6","V7")
categorical_columns <- c("V1","V2","V3","V4","V5","V6","V7")
df_compact <- df %>% select(all_of(col_name))

df_long <- df_compact %>% pivot_longer(cols = c("V1","V2","V3","V4","V5","V6","V7"),values_to = "Genre")

dummy_variables <- lapply(categorical_columns, function(column) {
  levels <- unique(df_compact[[column]])
  dummy_matrix <- sapply(levels, function(level) as.integer(df_compact[[column]] == level))
  colnames(dummy_matrix) <- paste0(column, "_", levels)
  return(dummy_matrix)
})


encoded_data <- cbind(df_compact,dummy_variables)

# Print the result
print(encoded_data)

```







```{r}
encoded_data <- encoded_data %>% select(-categorical_columns)
names(encoded_data) = gsub(pattern = "V1_*", replacement = "", x = names(encoded_data))
names(encoded_data) = gsub(pattern = "V2_*", replacement = "", x = names(encoded_data))
names(encoded_data) = gsub(pattern = "V3_*", replacement = "", x = names(encoded_data))
names(encoded_data) = gsub(pattern = "V4_*", replacement = "", x = names(encoded_data))
names(encoded_data) = gsub(pattern = "V5_*", replacement = "", x = names(encoded_data))
names(encoded_data) = gsub(pattern = "V6_*", replacement = "", x = names(encoded_data))
names(encoded_data) = gsub(pattern = "V7_*", replacement = "", x = names(encoded_data))
names(encoded_data) = gsub(pattern = "'*", replacement = "", x = names(encoded_data))
names(encoded_data) = trimws(names(encoded_data))
```




```{r}

df_long_vals <- df_long %>% group_by(Genre) %>% summarise(Total = n()) %>% arrange(-Total) %>% head(15)

top_15 <- unique(df_long_vals$Genre)
pl1 <- ggplot(data = df_long_vals,aes(x = reorder(Genre,-Total),y = Total)) + geom_col() + geom_label(aes(label = Total))
pl1
```



```{r}
df_long$Genre <- str_replace(df_long$Genre,"'","")
df_long$Genre <- str_replace(df_long$Genre,"'","")
df_long$Genre <- str_replace(df_long$Genre," ","")
#df_long <- df_long %>% select(-name)

text_scale_options1 <- c(1.2, 1, 1, 1, 0.8, 1)
text_scale_options2 <- c(1.3, 1.3, 1, 1, 2, 0.75)
text_scale_options3 <- c(1.5, 1.25, 1.25, 1, 2, 1.5)


main_bar_col <- c("darkred")
sets_bar_col <- c("turquoise4")
matrix_col <- c("slateblue4")
shade_col <- c("wheat4")

#I called it "1" because I anticipated others
#but never needed them
mb_ratio1 <- c(0.55,0.45)


genre_matrix <- table(df_long$Book, df_long$Genre) > 0

df_matrix <- as.data.frame(genre_matrix)
set_vars <- unique(colnames(df_matrix))

df_matrix <- df_matrix %>% rownames_to_column(var = "Book")



df_matrix <- df_matrix %>% 
  mutate(across(everything(), ~+as.logical(.x)))

df_matrix <- df_matrix %>% select(-Book)


upset(df_matrix,
        sets = top_10,
      	mainbar.y.label = "Cross-genre collections", 
	sets.x.label = "Count of book collections by genre",
	order.by = "freq",
	show.numbers = "yes",
	point.size = 2, 
	line.size = 1,
	text.scale=text_scale_options1,
	main.bar.color = main_bar_col,
	sets.bar.color = sets_bar_col,
	matrix.color = matrix_col,
	shade.color = shade_col,
	att.pos = "top")


```








